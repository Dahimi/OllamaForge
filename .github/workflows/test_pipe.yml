name: Debug Ollama Push

on:
  workflow_dispatch:

jobs:
  debug-push:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/devcontainers/base:ubuntu
      options: |
        --user root
        -v /__w/_temp:/__w/_temp
        -v /__w/_actions:/__w/_actions

    steps:
    - name: Fix workspace permissions
      run: |
        mkdir -p /__w/_temp/_runner_file_commands
        chmod -R 777 /__w/_temp
        chmod -R 777 /__w/_actions
        
    - uses: actions/checkout@v3

    - name: Setup user and permissions
      run: |
        # Create vscode user (if it doesn't exist)
        id -u vscode &>/dev/null || useradd -m -s /bin/bash vscode
        
        # Set up Ollama directories with correct permissions
        mkdir -p /home/vscode/.ollama
        chown -R vscode:vscode /home/vscode
        
        # Set up workspace permissions
        chown -R vscode:vscode $GITHUB_WORKSPACE
        
        echo "Directory permissions:"
        ls -la /home/vscode
        ls -la $GITHUB_WORKSPACE

    - name: Set up Ollama environment
      run: |
        # Set up SSH keys
        echo "${{ secrets.OLLAMA_SSH_PRIVATE_KEY }}" > /home/vscode/.ollama/id_ed25519
        echo "${{ secrets.OLLAMA_SSH_PUBLIC_KEY }}" > /home/vscode/.ollama/id_ed25519.pub
        chmod 600 /home/vscode/.ollama/id_ed25519
        chmod 644 /home/vscode/.ollama/id_ed25519.pub
        chown -R vscode:vscode /home/vscode/.ollama
        
        echo "Ollama directory setup:"
        ls -la /home/vscode/.ollama/

    - name: Install Ollama
      run: curl -fsSL https://ollama.com/install.sh | sh

    - name: Switch to vscode user
      run: |
        # Switch to vscode user for remaining steps
        echo "Setting OLLAMA_HOME..."
        echo "export OLLAMA_HOME=/home/vscode/.ollama" >> /home/vscode/.bashrc
        echo "OLLAMA_HOME=/home/vscode/.ollama" >> $GITHUB_ENV

    - name: Start Ollama server
      run: |
        # Kill any existing Ollama processes
        pkill ollama || true
        sleep 2
        
        # Start server with debug
        sudo -u vscode OLLAMA_HOME=/home/vscode/.ollama OLLAMA_DEBUG=1 ollama serve &
        sleep 5
        
        # Verify server
        curl -v http://localhost:11434/api/tags

    - name: Create and push test model
      run: |
        # Run as vscode user
        sudo -u vscode bash << 'EOF'
        export OLLAMA_HOME=/home/vscode/.ollama
        export OLLAMA_DEBUG=1
        
        # Create minimal model
        cat > Modelfile << 'MODELEOF'
        FROM gemma:2b
        PARAMETER temperature 0.7
        MODELEOF
        
        # Create local model
        echo "Creating model..."
        ollama create test-debug -f Modelfile
        
        # Copy with namespace
        echo "Copying model with namespace..."
        ollama cp test-debug llm_hub/test-debug
        
        # List models to verify
        echo "Listing models:"
        ollama list
        
        # Push using the namespaced name
        echo "Pushing model..."
        ollama push llm_hub/test-debug
        
        echo "Model should be available at: https://ollama.com/llm_hub/test-debug"
        EOF
        
    - name: Debug info on failure
      if: failure()
      run: |
        echo "Environment:"
        env | grep -i ollama || true
        id
        pwd
        
        echo "\nOllama directory:"
        ls -la /home/vscode/.ollama/
        
        echo "\nOllama logs:"
        cat /home/vscode/.ollama/logs/ollama.log || true
        
        echo "\nProcess status:"
        ps aux | grep ollama
        
        echo "\nModel files:"
        ls -R /home/vscode/.ollama/models/ || true
        
        echo "\nNetwork connections:"
        netstat -tupn | grep ollama || true
        
        echo "\nTesting registry connection:"
        curl -v https://registry.ollama.com/v1/auth || true
        
        echo "\nWorkspace permissions:"
        ls -la $GITHUB_WORKSPACE

    - name: Clean up
      if: always()
      run: |
        pkill ollama || true
        ollama rm test-debug || true
        ollama rm llm_hub/test-debug || true
